{
	// Place your vue-lecture 작업 영역 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Gnerate Basic Vue code" : {
		"prefix": "vue-start not ",
		"body": [
			"<template>/n<div>/n/n</div>/n</template>/n<script>/nexport default {/n/tname : '',/n// 이름 안적어도 됨/n/tcomponents: {},/n // 만들어진 컨포넌트는 다른 뷰에서 임포트 시켜 사용 가능/n/tdata() {/n/t/treturn{/n/t/t/ttitle: 'Hello world3'/n//데이터 값을 키로 정의 해서 사용할 수 있다 /n/t/t/t//{{title}} : html 안에서/n/t/t};/n/t},/n/tsetup(){},/n/tcreated(){}, /n//뷰 컨퍼런트 실행 시 바로 실헹/n/tmounted(){}, /n//<template> 로딩이 되는 순간 바로 실행/n/tunmounted(){}, /n//컴퍼넌트에서 다른 컨퍼넌트로 이동하는 순간 바로 실행/n/tmethods:{/n//함수를 정의 해서 사용/n}/n/n}/n</script>/n<style scoped>/n/n</style>"
		],
		"description": "generate basic vue cod"
	}





}